@model PagedList.IPagedList<HotelManagementSystem.Models.OrderFood>
@using PagedList.Mvc;

@*@model IEnumerable<HotelManagementSystem.Models.OrderFood>*@

@{
    ViewBag.Title = "Index";
}
<link href="~/Content/layout.css" rel="stylesheet" type="text/css" media="all">
<h2>Index</h2>

@using (Html.BeginForm("Index", "OrderFoods", FormMethod.Post))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        @*<input type="text" name="SearchString" class="form-control" />*@
        <button type="submit"  class="btn" ><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
    </p>

}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Guest Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            @*@Html.DisplayNameFor(model => model.Guest.FullName)*@
        </th>
        <th>
            @Html.ActionLink("Food Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            @*@Html.DisplayNameFor(model => model.Food.FoodName)*@
        </th>
        <th>
            Quntity
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Guest.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Food.FoodName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quntity)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.OrderId }, new { @class = "btn" }) |
                @Html.ActionLink("Details", "Details", new { id = item.OrderId }, new { @class = "btn" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.OrderId }, new { @class = "btn" })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of
@Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
                                                new
                                                {
                                                    page,
                                                    sortOrder = ViewBag.CurrentSort,
                                                    currentFilter = ViewBag.CurrentFilter
                                                }))